name: Deploy to GitHub Releases
on:
  push:
    branches: [ master ]
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 20 ]
    outputs:
      version: ${{ steps.properties.outputs.version }}
      changelog: ${{ steps.properties.outputs.changelog }}
    steps:
      # Check out
      - name: Fetch Sources
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.release.tag_name }}

      # node
      - name: Setup Node ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      # 环境变量
      - name: Set Environment Variables
        id: properties
        shell: bash
        run: |
          # 获取版本号
          VERSION=$(grep -n '## \[' CHANGELOG.md | awk -F '[\\[\\]]' 'NR == 1 { print $2 }')
          FILENAME=$(basename "${{ github.repository }}").user.js-$VERSION
          
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "filename=$FILENAME" >> $GITHUB_OUTPUT
          
          # 提取更新日志
          start_line=$(grep -n '## \[' CHANGELOG.md | awk -F ':' 'NR == 1 { print $1+1 }')
          end_line=$(grep -n '## \[' CHANGELOG.md | awk -F ':' 'NR == 2 { print $1-1 }')
          end_line=${end_line:-$(wc -l < CHANGELOG.md)}
          
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          sed -n "${start_line},${end_line}p" CHANGELOG.md >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      # 安装依赖
      - name: Install Dependencies
        run: npm ci

      # 构建
      - name: Run Build
        run: npm run build

      # 上传附件
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.properties.outputs.filename }}
          path: |
            dist/*

  releaseDraft:
    name: Release Draft
    if: github.event_name != 'pull_request'
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      # 检出代码
      - name: Check Out Code
        uses: actions/checkout@v4

      # 移除之前发布草稿
      - name: Remove Old Release Drafts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh api repos/${{ github.repository }}/releases \
            --jq '.[] | select(.draft == true) | .id' \
            | xargs -I '{}' gh api -X DELETE repos/{owner}/{repo}/releases/{}

      # 创建新草稿并附加构建产物
      - name: Create Release Draft
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # 确保 dist 目录下的构建产物存在
          ls dist/* || exit 1
          
          # 组装更新日志内容
          CHANGELOG="${{ needs.build.outputs.changelog }}"
          
          # 创建发布草稿并上传附件
          gh release create v${{ needs.build.outputs.version }} \
            --draft \
            --title "v${{ needs.build.outputs.version }}" \
            --notes "${CHANGELOG}" \
            dist/*
